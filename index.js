const Discord = require('discord.js');
const moment  = require('moment');
const { prefix, token } = require('./config.json');

String.prototype.toHHMMSS = function () {
    var sec_num = parseInt(this, 10); // don't forget the second param
    var hours   = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = sec_num - (hours * 3600) - (minutes * 60);

    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    var time    = hours+':'+minutes+':'+seconds;
    return time;
}

const client = new Discord.Client();

client.once('ready', () => {
    client.user.setActivity('>help | >w< Yip Yip', { type: 'LISTENING'});
    console.log('Ready!');
});

client.on('message', async message => {

    if(message.author.bot) return;

    if(!message.content.startsWith(prefix)) return;

    const args = message.content.slice(prefix.length).trim().split(/ +/g);
    const command = args.shift().toLowerCase();
  
    if(command === "ping") {
        await message.delete();
        const msg = await message.channel.send("Flying...");
        const embed = new Discord.MessageEmbed()
            .setAuthor(`${message.author.username}`, `${message.author.displayAvatarURL({ dynamic: true })}`)
            .setTitle("üèì Pong!")
            .addField("ws/API Latency", `${Math.round(client.ws.ping)}ms`)
            .addField("Message Latency is", `${msg.createdTimestamp - message.createdTimestamp}ms`)
            .setColor("#FF8000")
            .setTimestamp()
            .setFooter(`User ID: ${message.author.id}`)
        msg.delete()
        message.channel.send(embed)
    }

    if(command === "clean") {
        const deleteCount = parseInt(args[0], 10);

        if(!deleteCount || deleteCount < 2 || deleteCount > 100)
          return message.reply("Please provide a number between 2 and 100 for the number of messages to delete");

        const fetched = await message.channel.messages.fetch({limit: deleteCount});
        message.channel.bulkDelete(fetched)
          .catch(error => message.reply(`Couldn't delete messages because of: ${error}`));

        const embed = new Discord.MessageEmbed()
          .addField("–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞" , `–ë—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ ${deleteCount} —Å–æ–æ–±—â–µ–Ω–∏–π.`)
          .setColor("#FF8000")
          .setTimestamp()
          .setFooter(`User ID: ${message.author.id}`)
      
      message.channel.send(embed);
    }

    if(command === "server-icon") {
        if(!message.guild.splashURL) return message.error('–°–µ—Ä–≤–µ—Ä –Ω–µ –∏–º–µ–µ—Ç —Å–ø–ª–µ—à–∞', 6, false);
        let embed = new Discord.MessageEmbed()
            .setColor("#FF8000")
            .setImage(`${message.guild.iconURL}?size=2048`)
        message.channel.send(embed);
    }

    if(command === "server") {
        await message.delete();

        const embed = new Discord.MessageEmbed()
            .setAuthor(`${message.author.username}`, `${message.author.displayAvatarURL({ dynamic: true })}`)
            .setTitle("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —Å–µ—Ä–≤–µ—Ä–µ.")
            .addField("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞" ,message.guild.name)
            .addField("–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" ,message.guild.memberCount)
            .setColor("#FF8000")
            .setTimestamp()
            .setFooter(`User ID: ${message.author.id}`)
        
        message.channel.send(embed);
    }

    if(command === "user") {

        moment.locale("ru");

        await message.delete();

        let user = message.mentions.users.first() || message.author;

        const joinDiscord = moment(user.createdAt).format('llll');
        const joinServer = moment(user.joinedAt).format('llll');

        const embed = new Discord.MessageEmbed()
            .setAuthor(`${message.author.username}`, `${message.author.displayAvatarURL({ dynamic: true })}`)
            .addField("–ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" ,user.username + '#' + user.discriminator)
            .addField('–°—Ç–∞—Ç—É—Å', user.presence.status)
            .addField('–†–æ–ª–∏', `<@&${message.guild.member(message.author)._roles.join('> <@&')}>`)
            .addField('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è', joinServer, true)
            .addField("–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω", joinDiscord, true) 
            .setColor("#FF8000")
            .setTimestamp()
            .setFooter(`User ID: ${message.author.id}`)
        
        message.channel.send(embed);
    }

    if (command === "uptime") {
        await message.delete();
        var time = require('os').uptime();
        var uptime = (time + "").toHHMMSS();
        const embed = new Discord.MessageEmbed()
            .addField("Uptime ", uptime)
            .setColor("#FF8000")
            .setTimestamp()
            .setFooter(`User ID: ${message.author.id}`)
        message.channel.send(embed);
    }

    if (command === "help") {
        await message.delete();

        const embed = new Discord.MessageEmbed()
            .setAuthor(`${message.author.username}`, `${message.author.displayAvatarURL({ dynamic: true })}`)
            .setTitle("–í—Å–µ –∫–æ–º–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞. :3")
            .addField("–ü–∏–Ω–≥–∞–Ω—É—Ç—å –±–æ—Ç–∞" , "```>ping```")
            .addField("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —Å–µ—Ä–≤–µ—Ä–µ" , "```>server```")
            .addField("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ" , "```>user```")
            .addField("–•–µ–ª–ø –±–æ—Ç–∞" , "```>help```")
            .addField("–ò–¥–µ—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞(–±–µ—Ç–∞)" , "```>idea <Message>```")
            //.addField("–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞" , "```>clean <1-100>```")
            .setColor("#FF8000")
            .setTimestamp()
            .setFooter(`User ID: ${message.author.id}`)

        message.channel.send(embed);
    }

    if(command === "test-deploy") {
        message.channel.send("–£—Ö—É –¥–∞ ||–±–ª—è—Ç—å||. –£ –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å auto deploy.");
    }

    if(command === "idea") {
        await message.delete();

        const message_arg = args.join(" ");

        const embed = new Discord.MessageEmbed()
            .setAuthor(`${message.author.username}`, `${message.author.displayAvatarURL({ dynamic: true })}`)
            .setTitle(":pencil: –ò–¥–µ—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞")
            .addField("–ò–¥–µ—è" ,message_arg)
            .setColor("#FF8000")
            .setTimestamp()
            .setFooter(`User ID: ${message.author.id}`)
        
        message.channel.send(embed)
            .then(message => {
                message.react('üëç').then(() => message.react('üëé'));
            }).catch(() => {
            });
        }

});

client.login(token);